services:
  jupyter:
    build: .
    container_name: jupyter_lab
    image: cs611-project:latest
    ports:
      - "8080:8888"
    volumes:
      - .:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - CUDA_LAUNCH_BLOCKING=1 # Keep this for debugging CUDA errors
    # deploy: # <--- ADD THIS SECTION
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all # Or specify a number, e.g., 1, or specific device_ids: ['0', '1']
    #           capabilities: [gpu]
    command: ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--notebook-dir=/app", "--ServerApp.token=''", "--ServerApp.disable_check_xsrf=True"]
# services:
  airflow-init:
    build: .
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__FERNET_KEY=ynwrGWdXVXTtM3vz_bQ9NpScZhL9s48yshCVmWh8qLo=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./model_train:/opt/airflow/model_train
      - ./model_deploy:/opt/airflow/model_deploy
    entrypoint: >
      /bin/bash -c "airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true"

  airflow-webserver:
    build: .
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__FERNET_KEY=ynwrGWdXVXTtM3vz_bQ9NpScZhL9s48yshCVmWh8qLo=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    build: .
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__FERNET_KEY=ynwrGWdXVXTtM3vz_bQ9NpScZhL9s48yshCVmWh8qLo=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    command: scheduler

volumes:
  airflow_data:
